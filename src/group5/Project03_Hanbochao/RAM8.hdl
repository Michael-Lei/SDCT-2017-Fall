// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:

    DMux8Way (in=load,sel=address ,a=r0 ,b=r1 ,c=r2 ,d=r3 ,e=r4 ,f=r5 ,g=r6 ,h=r7);
    Register (in=in, load=r0, out=rr0);
    Register (in=in, load=r1, out=rr1);
    Register (in=in, load=r2, out=rr2);
    Register (in=in, load=r3, out=rr3);
    Register (in=in, load=r4, out=rr4);
    Register (in=in, load=r5, out=rr5);
    Register (in=in, load=r6, out=rr6);
    Register (in=in, load=r7, out=rr7);
    Mux8Way16(a=rr0 ,b=rr1 ,c=rr2 ,d=rr3 ,e=rr4 ,f=rr5,g=rr6 ,h=rr7 ,sel=address ,out=out); 



}